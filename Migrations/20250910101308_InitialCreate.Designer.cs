// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.dbcontext;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(Appdbcontext))]
    [Migration("20250910101308_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.models.School", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("schools");
                });

            modelBuilder.Entity("WebApplication1.models.Student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("students");
                });

            modelBuilder.Entity("WebApplication1.models.Subject", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("grade")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("subjects");
                });

            modelBuilder.Entity("WebApplication1.models.whichschoolcs", b =>
                {
                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<int>("shoolID")
                        .HasColumnType("int");

                    b.HasKey("studentID", "shoolID");

                    b.HasIndex("shoolID");

                    b.ToTable("StudentSchools");
                });

            modelBuilder.Entity("WebApplication1.models.whichsubject", b =>
                {
                    b.Property<int>("studentID")
                        .HasColumnType("int");

                    b.Property<int>("subjectID")
                        .HasColumnType("int");

                    b.HasKey("studentID", "subjectID");

                    b.HasIndex("subjectID");

                    b.ToTable("StudentSubjects");
                });

            modelBuilder.Entity("WebApplication1.models.whichschoolcs", b =>
                {
                    b.HasOne("WebApplication1.models.School", "school")
                        .WithMany("whichschoolcs")
                        .HasForeignKey("shoolID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.models.Student", "student")
                        .WithMany("whichschoolcs")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("school");

                    b.Navigation("student");
                });

            modelBuilder.Entity("WebApplication1.models.whichsubject", b =>
                {
                    b.HasOne("WebApplication1.models.Student", "student")
                        .WithMany("whichsubject")
                        .HasForeignKey("studentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.models.Subject", "Subject")
                        .WithMany("whichsubject")
                        .HasForeignKey("subjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("student");
                });

            modelBuilder.Entity("WebApplication1.models.School", b =>
                {
                    b.Navigation("whichschoolcs");
                });

            modelBuilder.Entity("WebApplication1.models.Student", b =>
                {
                    b.Navigation("whichschoolcs");

                    b.Navigation("whichsubject");
                });

            modelBuilder.Entity("WebApplication1.models.Subject", b =>
                {
                    b.Navigation("whichsubject");
                });
#pragma warning restore 612, 618
        }
    }
}
